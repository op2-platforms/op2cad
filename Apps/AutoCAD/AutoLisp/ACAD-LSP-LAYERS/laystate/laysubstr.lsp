;#region layer substract commands
;#region discipline designator
(defun c:ls-Architecture (/ _lay) 
  (setq _lay "A-*,A?-*")
  (laysubstr _lay)
)
(defun c:ls-Civil (/ _lay) 
  (setq _lay "C-*,C?-*")
  (laysubstr _lay)
)
(defun c:ls-Contractor (/ _lay) 
  (setq _lay "Z-*,Z?-*")
  (laysubstr _lay)
)
(defun c:ls-Electrical (/ _lay) 
  (setq _lay "E-*,E?-*")
  (laysubstr _lay)
)
(defun c:ls-Energy (/ _lay) 
  (setq _lay "W-*,W?-*")
  (laysubstr _lay)
)
(defun c:ls-Equipment (/ _lay) 
  (setq _lay "Q-*,Q?-*")
  (laysubstr _lay)
)
(defun c:ls-Fire (/ _lay) 
  (setq _lay "F-*,F?-*")
  (laysubstr _lay)
)
(defun c:ls-General (/ _lay) 
  (setq _lay "G-*,G?-*")
  (laysubstr _lay)
)
(defun c:ls-Geotechnical (/ _lay) 
  (setq _lay "B-*,B?-*")
  (laysubstr _lay)
)
(defun c:ls-Hazardeous (/ _lay) 
  (setq _lay "H-*,H?-*")
  (laysubstr _lay)
)
(defun c:ls-Interior (/ _lay) 
  (setq _lay "I-*,I?-*")
  (laysubstr _lay)
)
(defun c:ls-Landscape (/ _lay) 
  (setq _lay "L-*,L?-*")
  (laysubstr _lay)
)
(defun c:ls-Mechanical (/ _lay) 
  (setq _lay "M-*,M?-*")
  (laysubstr _lay)
)
(defun c:ls-Operation (/ _lay) 
  (setq _lay "O-*,O?-*")
  (laysubstr _lay)
)
(defun c:ls-Other (/ _lay) 
  (setq _lay "X-*,X?-*")
  (laysubstr _lay)
)
(defun c:ls-Plumbing (/ _lay) 
  (setq _lay "P-*,P?-*")
  (laysubstr _lay)
)
(defun c:ls-Process (/ _lay) 
  (setq _lay "D-*,D?-*")
  (laysubstr _lay)
)
(defun c:ls-Resource (/ _lay) 
  (setq _lay "R-*,R?-*")
  (laysubstr _lay)
)
(defun c:ls-Structural (/ _lay) 
  (setq _lay "S-*,S?-*")
  (laysubstr _lay)
)
(defun c:ls-Survey (/ _lay) 
  (setq _lay "V-*,V?-*")
  (laysubstr _lay)
)
(defun c:ls-Telecom (/ _lay) 
  (setq _lay "T-*,T?-*")
  (laysubstr _lay)
)
;#endregion


;#region majors
(defun c:ls-Elev (/ _lay) 
  (setq _lay "*-Elev-*")
  (laysubstr _lay)
)
(defun c:ls-Detl (/ _lay) 
  (setq _lay "*-Detl-*")
  (laysubstr _lay)
)
(defun c:ls-Sect (/ _lay) 
  (setq _lay "*-Sect-*")
  (laysubstr _lay)
)
(defun c:ls-Plan (/ _lay) 
  (setq _lay "*-Plan-*")
  (laysubstr _lay)
)
;#endregion


;#region minors
(defun c:ls-Anno (/ _lay) 
  (setq _lay "?-Anno-*,??-Anno-*,*-Labl,*-Labl-?,*-Tags,*-Tags-?,*-Note,*-Note-?,*-Text,*-Text-?,*-Iden,*-Iden-?,*-Revc,*-Revc-?,*-Refr,*-Refr-?,*-Symb,*-Symb-?,*-Dims,*-Dims-?,*-Grid,*-Grid-?")
  (laysubstr _lay)
)
(defun c:ls-Labl (/ _lay) 
  (setq _lay "*-Labl,*-Labl-?")
  (laysubstr _lay)
)
(defun c:ls-Tags (/ _lay) 
  (setq _lay "*-Tags,*-Tags-?")
  (laysubstr _lay)
)
(defun c:ls-Note (/ _lay) 
  (setq _lay "*-Note,*-Note-?")
  (laysubstr _lay)
)
(defun c:ls-Text (/ _lay) 
  (setq _lay "*-Text,*-Text-?")
  (laysubstr _lay)
)
(defun c:ls-Iden (/ _lay) 
  (setq _lay "*-Iden,*-Iden-?")
  (laysubstr _lay)
)
(defun c:ls-Revc (/ _lay) 
  (setq _lay "*-Revc,*-Revc-?")
  (laysubstr _lay)
)
(defun c:ls-Refr (/ _lay) 
  (setq _lay "*-Refr,*-Refr-?")
  (laysubstr _lay)
)
(defun c:ls-Scrn (/ _lay) 
  (setq _lay "*-Scrn,*-Scrn-?")
  (laysubstr _lay)
)
(defun c:ls-Symb (/ _lay) 
  (setq _lay "*-Symb,*-Symb-?")
  (laysubstr _lay)
)
(defun c:ls-Dims (/ _lay) 
  (setq _lay "*-Dims,*-Dims-?")
  (laysubstr _lay)
)
(defun c:ls-Grid (/ _lay) 
  (setq _lay "*-Grid,*-Grid-?")
  (laysubstr _lay)
)
(defun c:ls-Mask (/ _lay) 
  (setq _lay "*-Mask,*-Mask-?")
  (laysubstr _lay)
)
(defun c:ls-Nplt (/ _lay) 
  (setq _lay "*-Nplt,*-Nplt-?")
  (laysubstr _lay)
)
(defun c:ls-0001 (/ _lay) 
  (setq _lay "*-0001-*")
  (laysubstr _lay)
)
(defun c:ls-0002 (/ _lay) 
  (setq _lay "*-0002-*")
  (laysubstr _lay)
)
(defun c:ls-0003 (/ _lay) 
  (setq _lay "*-0003-*")
  (laysubstr _lay)
)
;#endregion


;#region phase
(defun c:ls-1 (/ _lay) 
  (setq _lay "*-1")
  (laysubstr _lay)
)
(defun c:ls-2 (/ _lay) 
  (setq _lay "*-2")
  (laysubstr _lay)
)
(defun c:ls-3 (/ _lay) 
  (setq _lay "*-3")
  (laysubstr _lay)
)
(defun c:ls-4 (/ _lay) 
  (setq _lay "*-4")
  (laysubstr _lay)
)
(defun c:ls-5 (/ _lay) 
  (setq _lay "*-5")
  (laysubstr _lay)
)
(defun c:ls-6 (/ _lay) 
  (setq _lay "*-6")
  (laysubstr _lay)
)
(defun c:ls-7 (/ _lay) 
  (setq _lay "*-7")
  (laysubstr _lay)
)
(defun c:ls-8 (/ _lay) 
  (setq _lay "*-8")
  (laysubstr _lay)
)
(defun c:ls-9 (/ _lay) 
  (setq _lay "*-9")
  (laysubstr _lay)
)
;#endregion


;#region status
(defun c:ls-N (/ _lay) 
  (setq _lay "*-N")
  (laysubstr _lay)
)
(defun c:ls-E (/ _lay) 
  (setq _lay "*-E")
  (laysubstr _lay)
)
(defun c:ls-D (/ _lay) 
  (setq _lay "*-D")
  (laysubstr _lay)
)
(defun c:ls-M (/ _lay) 
  (setq _lay "*-M")
  (laysubstr _lay)
)
(defun c:ls-A (/ _lay) 
  (setq _lay "*-A")
  (laysubstr _lay)
)
(defun c:ls-R (/ _lay) 
  (setq _lay "*-R")
  (laysubstr _lay)
)
(defun c:ls-T (/ _lay) 
  (setq _lay "*-T")
  (laysubstr _lay)
)
(defun c:ls-P (/ _lay) 
  (setq _lay "*-P")
  (laysubstr _lay)
)
(defun c:ls-F (/ _lay) 
  (setq _lay "*-F")
  (laysubstr _lay)
)
(defun c:ls-S (/ _lay) 
  (setq _lay "*-S")
  (laysubstr _lay)
)
;#endregion


;#endregion
 
(defun laysubstr (_lay /) 
  (command "-layer" "off" _lay "f" _lay "")
  (princ)
)